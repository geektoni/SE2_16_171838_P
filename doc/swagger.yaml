
# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Uninforma API
  description: Search for question and answer to fulfill yout university doubts!
  version: "1.0.0"
  contact:
    name: giovanni.detoni@studenti.unitn.it
# the domain of the service
host: se2-16-171838-p-production.herokuapp.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /
produces:
  - text/html
paths:
  /:
    get:
      summary: Index page.
      description: Return a dictionary containing all questions grouped by category. 
      tags:
        - Index
      responses:
        200:
          description: A dictionary of questions grouped by category
          schema:
            type: array
            items:
              type: object
              properties:
                category:
                  type: array
                  items: 
                    $ref: '#/definitions/Question'
        default:
          description: An empty dictionary
          schema:
            type: array
            items:
              type: object
              properties:
                category:
                  type: array
                  items: 
                    $ref: '#/definitions/Question'
  /questions/{id}:
    get:
      summary: Show a questiondescription webpage
      description: Return a single question given its id
      tags:
        - Question
      parameters:
        - name: id
          in: path
          description: Id of the question we want to see.
          required: true
          type: number
          format: integer
      responses:
        200:
          description: A single question object
          schema:
            $ref: '#/definitions/Question'
        404:
          description: An empty question object if the id doesn't exist.
          schema:
            $ref: '#/definitions/Question'
  /questions:
    get:
      summary: Search questions
      description: Search questions by a text query
      tags:
        - Question
      parameters:
        - name: query
          in: query
          description: A list of words, separated by space, that will be used to search
          required: true
          type: string
          format: string
      responses:
        200:
          description: Return a list of question or an empty list if nothing is found
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
  /questions/{id}/update:
    post:
      summary: Update a question
      description: Update the rating of a question
      tags:
        - Question
      parameters:
        - name: id
          in: path
          description: The id of the question I want to modify
          required: true
          type: number
          format: integer
        - name: new_question
          in: body
          description: New data we want to use to update the question.
          required: true
          schema: 
            $ref: '#/definitions/Question'
      responses:  
        200:
          description: Return the updated object with the new values
          schema:
            $ref: '#/definitions/Question'
        500:
          description: If the id is not valid or doesn't exist.
        
definitions:
        
  Question:
    type: object
    properties:
      title:
        type: string 
        description: Title of the question.
      answer:
        type: string
        description: Answer to the question.
      rating:
        type: object
        properties:
          up:
            type: integer
            description: How many like the question received.
          down:
            type: integer
            description: How many dislike the question received. 
      category:
          type: string
          description: The category
      tags:
          type: array
          items:
            type: string
